/**
 * 旋转图像
 * 给定一个 n × n 的二维矩阵表示一个图像。
 * 将图像顺时针旋转 90 度。
 * 说明：
 * 你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。
 * 示例 1:
 * 给定 matrix = 
 * [
 *   [1,2,3],
 *   [4,5,6],
 *   [7,8,9]
 * ],
 * 原地旋转输入矩阵，使其变为:
 * [
 *   [7,4,1],
 *   [8,5,2],
 *   [9,6,3]
 * ]
 * 示例 2:
 * 给定 matrix =
 * [
 *   [ 5, 1, 9,11],
 *   [ 2, 4, 8,10],
 *   [13, 3, 6, 7],
 *   [15,14,12,16]
 * ], 
 * 原地旋转输入矩阵，使其变为:
 * [
 *   [15,13, 2, 5],
 *   [14, 3, 4, 1],
 *   [12, 6, 8, 9],
 *   [16, 7,10,11]
 * ]
 * 思路：
 * 1. 左上角的点，绝对向右移动，
 * 2. 右上角的点，绝对向下移动，
 * 3. 右下角的点，绝对向左移动，
 * 4. 左下角的点，绝对向上移动
 */
var rotate = function(arr) {
  var abs1 = 0;
  var abs2 = arr.length - 1;
  while (abs1 <= abs2) {
    var p1 = abs1;
    var p2 = abs2;
    while (p1 != abs2) {
      var temp = arr[abs1][p1];       //左上
      arr[abs1][p1] = arr[p2][abs1];  //左上 = 左下
      arr[p2][abs1] = arr[abs2][p2];  //左下 = 右下
      arr[abs2][p2] = arr[p1][abs2];  //右下 = 右上
      arr[p1][abs2] = temp;           //右上 = 左上
      p1 += 1;
      p2 -= 1;
    }
    abs1 += 1;
    abs2 -= 1;
  }
  return arr;
};

var arr = [
  [1,2,3],
  [4,5,6],
  [7,8,9]
];

var res = rotate(arr);
console.log(res);